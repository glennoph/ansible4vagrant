---
- name: include token dict
  include_vars:
    file: "{{ playbook_dir }}/token-dict.yml"


- name: grep file1 for tokens before replace
  command:
    grep token /data/file1.properties

- name: include token expr
  include_vars:
    file: "{{ playbook_dir }}/token-expression.yml"
    
- name: replace tokens via find xargs P0 sed inplace subst
  shell: find /data -type f -name 'file*.properties' | xargs -P 0 sed -i "{{tokens_expression}}"
  #shell: sed -i "{{tokens_expression}}" /data/file*.properties
    
##- name: find files for replace
##  find:
##    paths: /data
##    patterns: "*.properties"
##    recurse: yes
##  register: find_properties
##
##- name: replace tokens
##  replace:
##    path:    "{{ item.0.path }}"
##    regexp:  "{{ item.1.regexp }}"
##    replace: "{{ item.1.replace }}"
##    backup: yes
##  with_nested:
##    - "{{ find_properties.files }}"
##    - "{{ tokens_to_replace }}"

- name: check data dir exists
  file:
    dest: "/data"
    state: directory
    
- name: list data dir
  command:
    ls /data/
    
- name: cat file1,2,3
  shell: |
    cat /data/file1.properties
    cat /data/file2.properties
    cat /data/file3.properties

- name: grep file1 for tokens, expecting none after replace
  command:
    grep token /data/file1.properties
  ignore_errors: True


    
